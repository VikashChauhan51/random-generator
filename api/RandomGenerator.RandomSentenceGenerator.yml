### YamlMime:ManagedReference
items:
- uid: RandomGenerator.RandomSentenceGenerator
  commentId: T:RandomGenerator.RandomSentenceGenerator
  id: RandomSentenceGenerator
  parent: RandomGenerator
  children:
  - RandomGenerator.RandomSentenceGenerator.#ctor
  - RandomGenerator.RandomSentenceGenerator.#ctor(RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech)
  - RandomGenerator.RandomSentenceGenerator.ExcludeOperation(RandomGenerator.Core.Operations)
  - RandomGenerator.RandomSentenceGenerator.Generate(System.Int32)
  - RandomGenerator.RandomSentenceGenerator.IncludeOperation(RandomGenerator.Core.Operations)
  - RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Adjective)
  - RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Adverb)
  - RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Conjunction)
  - RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Interjection)
  - RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Noun)
  - RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Preposition)
  - RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Pronoun)
  - RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Verb)
  langs:
  - csharp
  - vb
  name: RandomSentenceGenerator
  nameWithType: RandomSentenceGenerator
  fullName: RandomGenerator.RandomSentenceGenerator
  type: Class
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: RandomSentenceGenerator
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 4
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public class RandomSentenceGenerator
    content.vb: Public Class RandomSentenceGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RandomGenerator.RandomSentenceGenerator.#ctor
  commentId: M:RandomGenerator.RandomSentenceGenerator.#ctor
  id: '#ctor'
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: RandomSentenceGenerator()
  nameWithType: RandomSentenceGenerator.RandomSentenceGenerator()
  fullName: RandomGenerator.RandomSentenceGenerator.RandomSentenceGenerator()
  type: Constructor
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: .ctor
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 17
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator()
    content.vb: Public Sub New()
  overload: RandomGenerator.RandomSentenceGenerator.#ctor*
  nameWithType.vb: RandomSentenceGenerator.New()
  fullName.vb: RandomGenerator.RandomSentenceGenerator.New()
  name.vb: New()
- uid: RandomGenerator.RandomSentenceGenerator.#ctor(RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech)
  commentId: M:RandomGenerator.RandomSentenceGenerator.#ctor(RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech)
  id: '#ctor(RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech,RandomGenerator.Core.PartOfSpeech)'
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: RandomSentenceGenerator(PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech)
  nameWithType: RandomSentenceGenerator.RandomSentenceGenerator(PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech)
  fullName: RandomGenerator.RandomSentenceGenerator.RandomSentenceGenerator(RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech)
  type: Constructor
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: .ctor
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 37
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator(PartOfSpeech verbs, PartOfSpeech adjectives, PartOfSpeech adverbs, PartOfSpeech nouns, PartOfSpeech pronouns, PartOfSpeech prepositions, PartOfSpeech conjunctions, PartOfSpeech interjections)
    parameters:
    - id: verbs
      type: RandomGenerator.Core.PartOfSpeech
    - id: adjectives
      type: RandomGenerator.Core.PartOfSpeech
    - id: adverbs
      type: RandomGenerator.Core.PartOfSpeech
    - id: nouns
      type: RandomGenerator.Core.PartOfSpeech
    - id: pronouns
      type: RandomGenerator.Core.PartOfSpeech
    - id: prepositions
      type: RandomGenerator.Core.PartOfSpeech
    - id: conjunctions
      type: RandomGenerator.Core.PartOfSpeech
    - id: interjections
      type: RandomGenerator.Core.PartOfSpeech
    content.vb: Public Sub New(verbs As PartOfSpeech, adjectives As PartOfSpeech, adverbs As PartOfSpeech, nouns As PartOfSpeech, pronouns As PartOfSpeech, prepositions As PartOfSpeech, conjunctions As PartOfSpeech, interjections As PartOfSpeech)
  overload: RandomGenerator.RandomSentenceGenerator.#ctor*
  nameWithType.vb: RandomSentenceGenerator.New(PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech)
  fullName.vb: RandomGenerator.RandomSentenceGenerator.New(RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech, RandomGenerator.Core.PartOfSpeech)
  name.vb: New(PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech, PartOfSpeech)
- uid: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Noun)
  commentId: M:RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Noun)
  id: With(RandomGenerator.Core.Noun)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: With(Noun)
  nameWithType: RandomSentenceGenerator.With(Noun)
  fullName: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Noun)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: With
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 57
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator With(Noun nouns)
    parameters:
    - id: nouns
      type: RandomGenerator.Core.Noun
    return:
      type: RandomGenerator.RandomSentenceGenerator
    content.vb: Public Function [With](nouns As Noun) As RandomSentenceGenerator
  overload: RandomGenerator.RandomSentenceGenerator.With*
- uid: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Pronoun)
  commentId: M:RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Pronoun)
  id: With(RandomGenerator.Core.Pronoun)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: With(Pronoun)
  nameWithType: RandomSentenceGenerator.With(Pronoun)
  fullName: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Pronoun)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: With
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 62
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator With(Pronoun pronouns)
    parameters:
    - id: pronouns
      type: RandomGenerator.Core.Pronoun
    return:
      type: RandomGenerator.RandomSentenceGenerator
    content.vb: Public Function [With](pronouns As Pronoun) As RandomSentenceGenerator
  overload: RandomGenerator.RandomSentenceGenerator.With*
- uid: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Verb)
  commentId: M:RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Verb)
  id: With(RandomGenerator.Core.Verb)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: With(Verb)
  nameWithType: RandomSentenceGenerator.With(Verb)
  fullName: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Verb)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: With
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 67
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator With(Verb verbs)
    parameters:
    - id: verbs
      type: RandomGenerator.Core.Verb
    return:
      type: RandomGenerator.RandomSentenceGenerator
    content.vb: Public Function [With](verbs As Verb) As RandomSentenceGenerator
  overload: RandomGenerator.RandomSentenceGenerator.With*
- uid: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Adjective)
  commentId: M:RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Adjective)
  id: With(RandomGenerator.Core.Adjective)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: With(Adjective)
  nameWithType: RandomSentenceGenerator.With(Adjective)
  fullName: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Adjective)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: With
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 72
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator With(Adjective adjectives)
    parameters:
    - id: adjectives
      type: RandomGenerator.Core.Adjective
    return:
      type: RandomGenerator.RandomSentenceGenerator
    content.vb: Public Function [With](adjectives As Adjective) As RandomSentenceGenerator
  overload: RandomGenerator.RandomSentenceGenerator.With*
- uid: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Adverb)
  commentId: M:RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Adverb)
  id: With(RandomGenerator.Core.Adverb)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: With(Adverb)
  nameWithType: RandomSentenceGenerator.With(Adverb)
  fullName: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Adverb)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: With
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 77
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator With(Adverb adverbs)
    parameters:
    - id: adverbs
      type: RandomGenerator.Core.Adverb
    return:
      type: RandomGenerator.RandomSentenceGenerator
    content.vb: Public Function [With](adverbs As Adverb) As RandomSentenceGenerator
  overload: RandomGenerator.RandomSentenceGenerator.With*
- uid: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Preposition)
  commentId: M:RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Preposition)
  id: With(RandomGenerator.Core.Preposition)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: With(Preposition)
  nameWithType: RandomSentenceGenerator.With(Preposition)
  fullName: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Preposition)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: With
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 82
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator With(Preposition prepositions)
    parameters:
    - id: prepositions
      type: RandomGenerator.Core.Preposition
    return:
      type: RandomGenerator.RandomSentenceGenerator
    content.vb: Public Function [With](prepositions As Preposition) As RandomSentenceGenerator
  overload: RandomGenerator.RandomSentenceGenerator.With*
- uid: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Conjunction)
  commentId: M:RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Conjunction)
  id: With(RandomGenerator.Core.Conjunction)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: With(Conjunction)
  nameWithType: RandomSentenceGenerator.With(Conjunction)
  fullName: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Conjunction)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: With
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 87
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator With(Conjunction conjunctions)
    parameters:
    - id: conjunctions
      type: RandomGenerator.Core.Conjunction
    return:
      type: RandomGenerator.RandomSentenceGenerator
    content.vb: Public Function [With](conjunctions As Conjunction) As RandomSentenceGenerator
  overload: RandomGenerator.RandomSentenceGenerator.With*
- uid: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Interjection)
  commentId: M:RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Interjection)
  id: With(RandomGenerator.Core.Interjection)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: With(Interjection)
  nameWithType: RandomSentenceGenerator.With(Interjection)
  fullName: RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Interjection)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: With
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 92
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator With(Interjection interjections)
    parameters:
    - id: interjections
      type: RandomGenerator.Core.Interjection
    return:
      type: RandomGenerator.RandomSentenceGenerator
    content.vb: Public Function [With](interjections As Interjection) As RandomSentenceGenerator
  overload: RandomGenerator.RandomSentenceGenerator.With*
- uid: RandomGenerator.RandomSentenceGenerator.IncludeOperation(RandomGenerator.Core.Operations)
  commentId: M:RandomGenerator.RandomSentenceGenerator.IncludeOperation(RandomGenerator.Core.Operations)
  id: IncludeOperation(RandomGenerator.Core.Operations)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: IncludeOperation(Operations)
  nameWithType: RandomSentenceGenerator.IncludeOperation(Operations)
  fullName: RandomGenerator.RandomSentenceGenerator.IncludeOperation(RandomGenerator.Core.Operations)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: IncludeOperation
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 97
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator IncludeOperation(Operations operation)
    parameters:
    - id: operation
      type: RandomGenerator.Core.Operations
    return:
      type: RandomGenerator.RandomSentenceGenerator
    content.vb: Public Function IncludeOperation(operation As Operations) As RandomSentenceGenerator
  overload: RandomGenerator.RandomSentenceGenerator.IncludeOperation*
- uid: RandomGenerator.RandomSentenceGenerator.ExcludeOperation(RandomGenerator.Core.Operations)
  commentId: M:RandomGenerator.RandomSentenceGenerator.ExcludeOperation(RandomGenerator.Core.Operations)
  id: ExcludeOperation(RandomGenerator.Core.Operations)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: ExcludeOperation(Operations)
  nameWithType: RandomSentenceGenerator.ExcludeOperation(Operations)
  fullName: RandomGenerator.RandomSentenceGenerator.ExcludeOperation(RandomGenerator.Core.Operations)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: ExcludeOperation
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 102
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomSentenceGenerator ExcludeOperation(Operations operation)
    parameters:
    - id: operation
      type: RandomGenerator.Core.Operations
    return:
      type: RandomGenerator.RandomSentenceGenerator
    content.vb: Public Function ExcludeOperation(operation As Operations) As RandomSentenceGenerator
  overload: RandomGenerator.RandomSentenceGenerator.ExcludeOperation*
- uid: RandomGenerator.RandomSentenceGenerator.Generate(System.Int32)
  commentId: M:RandomGenerator.RandomSentenceGenerator.Generate(System.Int32)
  id: Generate(System.Int32)
  parent: RandomGenerator.RandomSentenceGenerator
  langs:
  - csharp
  - vb
  name: Generate(int)
  nameWithType: RandomSentenceGenerator.Generate(int)
  fullName: RandomGenerator.RandomSentenceGenerator.Generate(int)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomSentenceGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: Generate
    path: src/RandomGenerator/RandomSentenceGenerator.cs
    startLine: 107
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public string Generate(int wordsCount)
    parameters:
    - id: wordsCount
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function Generate(wordsCount As Integer) As String
  overload: RandomGenerator.RandomSentenceGenerator.Generate*
  nameWithType.vb: RandomSentenceGenerator.Generate(Integer)
  fullName.vb: RandomGenerator.RandomSentenceGenerator.Generate(Integer)
  name.vb: Generate(Integer)
references:
- uid: RandomGenerator
  commentId: N:RandomGenerator
  href: RandomGenerator.html
  name: RandomGenerator
  nameWithType: RandomGenerator
  fullName: RandomGenerator
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RandomGenerator.RandomSentenceGenerator.#ctor*
  commentId: Overload:RandomGenerator.RandomSentenceGenerator.#ctor
  href: RandomGenerator.RandomSentenceGenerator.html#RandomGenerator.RandomSentenceGenerator.#ctor
  name: RandomSentenceGenerator
  nameWithType: RandomSentenceGenerator.RandomSentenceGenerator
  fullName: RandomGenerator.RandomSentenceGenerator.RandomSentenceGenerator
  nameWithType.vb: RandomSentenceGenerator.New
  fullName.vb: RandomGenerator.RandomSentenceGenerator.New
  name.vb: New
- uid: RandomGenerator.Core.PartOfSpeech
  commentId: T:RandomGenerator.Core.PartOfSpeech
  parent: RandomGenerator.Core
  href: RandomGenerator.Core.PartOfSpeech.html
  name: PartOfSpeech
  nameWithType: PartOfSpeech
  fullName: RandomGenerator.Core.PartOfSpeech
- uid: RandomGenerator.Core
  commentId: N:RandomGenerator.Core
  href: RandomGenerator.html
  name: RandomGenerator.Core
  nameWithType: RandomGenerator.Core
  fullName: RandomGenerator.Core
  spec.csharp:
  - uid: RandomGenerator
    name: RandomGenerator
    href: RandomGenerator.html
  - name: .
  - uid: RandomGenerator.Core
    name: Core
    href: RandomGenerator.Core.html
  spec.vb:
  - uid: RandomGenerator
    name: RandomGenerator
    href: RandomGenerator.html
  - name: .
  - uid: RandomGenerator.Core
    name: Core
    href: RandomGenerator.Core.html
- uid: RandomGenerator.RandomSentenceGenerator.With*
  commentId: Overload:RandomGenerator.RandomSentenceGenerator.With
  href: RandomGenerator.RandomSentenceGenerator.html#RandomGenerator.RandomSentenceGenerator.With(RandomGenerator.Core.Noun)
  name: With
  nameWithType: RandomSentenceGenerator.With
  fullName: RandomGenerator.RandomSentenceGenerator.With
- uid: RandomGenerator.Core.Noun
  commentId: T:RandomGenerator.Core.Noun
  parent: RandomGenerator.Core
  href: RandomGenerator.Core.Noun.html
  name: Noun
  nameWithType: Noun
  fullName: RandomGenerator.Core.Noun
- uid: RandomGenerator.RandomSentenceGenerator
  commentId: T:RandomGenerator.RandomSentenceGenerator
  parent: RandomGenerator
  href: RandomGenerator.RandomSentenceGenerator.html
  name: RandomSentenceGenerator
  nameWithType: RandomSentenceGenerator
  fullName: RandomGenerator.RandomSentenceGenerator
- uid: RandomGenerator.Core.Pronoun
  commentId: T:RandomGenerator.Core.Pronoun
  parent: RandomGenerator.Core
  href: RandomGenerator.Core.Pronoun.html
  name: Pronoun
  nameWithType: Pronoun
  fullName: RandomGenerator.Core.Pronoun
- uid: RandomGenerator.Core.Verb
  commentId: T:RandomGenerator.Core.Verb
  parent: RandomGenerator.Core
  href: RandomGenerator.Core.Verb.html
  name: Verb
  nameWithType: Verb
  fullName: RandomGenerator.Core.Verb
- uid: RandomGenerator.Core.Adjective
  commentId: T:RandomGenerator.Core.Adjective
  parent: RandomGenerator.Core
  href: RandomGenerator.Core.Adjective.html
  name: Adjective
  nameWithType: Adjective
  fullName: RandomGenerator.Core.Adjective
- uid: RandomGenerator.Core.Adverb
  commentId: T:RandomGenerator.Core.Adverb
  parent: RandomGenerator.Core
  href: RandomGenerator.Core.Adverb.html
  name: Adverb
  nameWithType: Adverb
  fullName: RandomGenerator.Core.Adverb
- uid: RandomGenerator.Core.Preposition
  commentId: T:RandomGenerator.Core.Preposition
  parent: RandomGenerator.Core
  href: RandomGenerator.Core.Preposition.html
  name: Preposition
  nameWithType: Preposition
  fullName: RandomGenerator.Core.Preposition
- uid: RandomGenerator.Core.Conjunction
  commentId: T:RandomGenerator.Core.Conjunction
  parent: RandomGenerator.Core
  href: RandomGenerator.Core.Conjunction.html
  name: Conjunction
  nameWithType: Conjunction
  fullName: RandomGenerator.Core.Conjunction
- uid: RandomGenerator.Core.Interjection
  commentId: T:RandomGenerator.Core.Interjection
  parent: RandomGenerator.Core
  href: RandomGenerator.Core.Interjection.html
  name: Interjection
  nameWithType: Interjection
  fullName: RandomGenerator.Core.Interjection
- uid: RandomGenerator.RandomSentenceGenerator.IncludeOperation*
  commentId: Overload:RandomGenerator.RandomSentenceGenerator.IncludeOperation
  href: RandomGenerator.RandomSentenceGenerator.html#RandomGenerator.RandomSentenceGenerator.IncludeOperation(RandomGenerator.Core.Operations)
  name: IncludeOperation
  nameWithType: RandomSentenceGenerator.IncludeOperation
  fullName: RandomGenerator.RandomSentenceGenerator.IncludeOperation
- uid: RandomGenerator.Core.Operations
  commentId: T:RandomGenerator.Core.Operations
  parent: RandomGenerator.Core
  href: RandomGenerator.Core.Operations.html
  name: Operations
  nameWithType: Operations
  fullName: RandomGenerator.Core.Operations
- uid: RandomGenerator.RandomSentenceGenerator.ExcludeOperation*
  commentId: Overload:RandomGenerator.RandomSentenceGenerator.ExcludeOperation
  href: RandomGenerator.RandomSentenceGenerator.html#RandomGenerator.RandomSentenceGenerator.ExcludeOperation(RandomGenerator.Core.Operations)
  name: ExcludeOperation
  nameWithType: RandomSentenceGenerator.ExcludeOperation
  fullName: RandomGenerator.RandomSentenceGenerator.ExcludeOperation
- uid: RandomGenerator.RandomSentenceGenerator.Generate*
  commentId: Overload:RandomGenerator.RandomSentenceGenerator.Generate
  href: RandomGenerator.RandomSentenceGenerator.html#RandomGenerator.RandomSentenceGenerator.Generate(System.Int32)
  name: Generate
  nameWithType: RandomSentenceGenerator.Generate
  fullName: RandomGenerator.RandomSentenceGenerator.Generate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
