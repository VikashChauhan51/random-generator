### YamlMime:ManagedReference
items:
- uid: RandomGenerator.StringGenerator
  commentId: T:RandomGenerator.StringGenerator
  id: StringGenerator
  parent: RandomGenerator
  children:
  - RandomGenerator.StringGenerator.BuildCharacterSet(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - RandomGenerator.StringGenerator.DefaultIncludeLowercase
  - RandomGenerator.StringGenerator.DefaultIncludeNumeric
  - RandomGenerator.StringGenerator.DefaultIncludeSpecial
  - RandomGenerator.StringGenerator.DefaultIncludeUppercase
  - RandomGenerator.StringGenerator.DefaultMaxAttempts
  - RandomGenerator.StringGenerator.Generate(System.ReadOnlySpan{System.Char},System.Int32)
  - RandomGenerator.StringGenerator.LowercaseCharacters
  - RandomGenerator.StringGenerator.NumericCharacters
  - RandomGenerator.StringGenerator.SpecialCharacters
  - RandomGenerator.StringGenerator.UppercaseCharacters
  - RandomGenerator.StringGenerator.random
  langs:
  - csharp
  - vb
  name: StringGenerator
  nameWithType: StringGenerator
  fullName: RandomGenerator.StringGenerator
  type: Class
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: StringGenerator
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 5
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public abstract class StringGenerator
    content.vb: Public MustInherit Class StringGenerator
  inheritance:
  - System.Object
  derivedClasses:
  - RandomGenerator.RandomPasswordGenerator
  - RandomGenerator.RandomStringGenerator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RandomGenerator.StringGenerator.LowercaseCharacters
  commentId: F:RandomGenerator.StringGenerator.LowercaseCharacters
  id: LowercaseCharacters
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: LowercaseCharacters
  nameWithType: StringGenerator.LowercaseCharacters
  fullName: RandomGenerator.StringGenerator.LowercaseCharacters
  type: Field
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: LowercaseCharacters
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 7
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected const string LowercaseCharacters = "abcdefghijklmnopqrstuvwxyz"
    return:
      type: System.String
    content.vb: Protected Const LowercaseCharacters As String = "abcdefghijklmnopqrstuvwxyz"
- uid: RandomGenerator.StringGenerator.UppercaseCharacters
  commentId: F:RandomGenerator.StringGenerator.UppercaseCharacters
  id: UppercaseCharacters
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: UppercaseCharacters
  nameWithType: StringGenerator.UppercaseCharacters
  fullName: RandomGenerator.StringGenerator.UppercaseCharacters
  type: Field
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: UppercaseCharacters
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 8
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected const string UppercaseCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    return:
      type: System.String
    content.vb: Protected Const UppercaseCharacters As String = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
- uid: RandomGenerator.StringGenerator.NumericCharacters
  commentId: F:RandomGenerator.StringGenerator.NumericCharacters
  id: NumericCharacters
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: NumericCharacters
  nameWithType: StringGenerator.NumericCharacters
  fullName: RandomGenerator.StringGenerator.NumericCharacters
  type: Field
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: NumericCharacters
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 9
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected const string NumericCharacters = "0123456789"
    return:
      type: System.String
    content.vb: Protected Const NumericCharacters As String = "0123456789"
- uid: RandomGenerator.StringGenerator.SpecialCharacters
  commentId: F:RandomGenerator.StringGenerator.SpecialCharacters
  id: SpecialCharacters
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: SpecialCharacters
  nameWithType: StringGenerator.SpecialCharacters
  fullName: RandomGenerator.StringGenerator.SpecialCharacters
  type: Field
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: SpecialCharacters
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 10
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected const string SpecialCharacters = "!#$%&*@\\+_=|`~-^[]{}().,'%:"
    return:
      type: System.String
    content.vb: Protected Const SpecialCharacters As String = "!#$%&*@\+_=|`~-^[]{}().,'%:"
- uid: RandomGenerator.StringGenerator.DefaultIncludeLowercase
  commentId: F:RandomGenerator.StringGenerator.DefaultIncludeLowercase
  id: DefaultIncludeLowercase
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: DefaultIncludeLowercase
  nameWithType: StringGenerator.DefaultIncludeLowercase
  fullName: RandomGenerator.StringGenerator.DefaultIncludeLowercase
  type: Field
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: DefaultIncludeLowercase
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 11
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected bool DefaultIncludeLowercase
    return:
      type: System.Boolean
    content.vb: Protected DefaultIncludeLowercase As Boolean
- uid: RandomGenerator.StringGenerator.DefaultIncludeUppercase
  commentId: F:RandomGenerator.StringGenerator.DefaultIncludeUppercase
  id: DefaultIncludeUppercase
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: DefaultIncludeUppercase
  nameWithType: StringGenerator.DefaultIncludeUppercase
  fullName: RandomGenerator.StringGenerator.DefaultIncludeUppercase
  type: Field
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: DefaultIncludeUppercase
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 12
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected bool DefaultIncludeUppercase
    return:
      type: System.Boolean
    content.vb: Protected DefaultIncludeUppercase As Boolean
- uid: RandomGenerator.StringGenerator.DefaultIncludeNumeric
  commentId: F:RandomGenerator.StringGenerator.DefaultIncludeNumeric
  id: DefaultIncludeNumeric
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: DefaultIncludeNumeric
  nameWithType: StringGenerator.DefaultIncludeNumeric
  fullName: RandomGenerator.StringGenerator.DefaultIncludeNumeric
  type: Field
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: DefaultIncludeNumeric
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 13
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected bool DefaultIncludeNumeric
    return:
      type: System.Boolean
    content.vb: Protected DefaultIncludeNumeric As Boolean
- uid: RandomGenerator.StringGenerator.DefaultIncludeSpecial
  commentId: F:RandomGenerator.StringGenerator.DefaultIncludeSpecial
  id: DefaultIncludeSpecial
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: DefaultIncludeSpecial
  nameWithType: StringGenerator.DefaultIncludeSpecial
  fullName: RandomGenerator.StringGenerator.DefaultIncludeSpecial
  type: Field
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: DefaultIncludeSpecial
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 14
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected bool DefaultIncludeSpecial
    return:
      type: System.Boolean
    content.vb: Protected DefaultIncludeSpecial As Boolean
- uid: RandomGenerator.StringGenerator.DefaultMaxAttempts
  commentId: F:RandomGenerator.StringGenerator.DefaultMaxAttempts
  id: DefaultMaxAttempts
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: DefaultMaxAttempts
  nameWithType: StringGenerator.DefaultMaxAttempts
  fullName: RandomGenerator.StringGenerator.DefaultMaxAttempts
  type: Field
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: DefaultMaxAttempts
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 15
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected const int DefaultMaxAttempts = 10000
    return:
      type: System.Int32
    content.vb: Protected Const DefaultMaxAttempts As Integer = 10000
- uid: RandomGenerator.StringGenerator.random
  commentId: F:RandomGenerator.StringGenerator.random
  id: random
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: random
  nameWithType: StringGenerator.random
  fullName: RandomGenerator.StringGenerator.random
  type: Field
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: random
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 16
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected static readonly Random random
    return:
      type: System.Random
    content.vb: Protected Shared ReadOnly random As Random
- uid: RandomGenerator.StringGenerator.BuildCharacterSet(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:RandomGenerator.StringGenerator.BuildCharacterSet(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: BuildCharacterSet(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: BuildCharacterSet(bool, bool, bool, bool)
  nameWithType: StringGenerator.BuildCharacterSet(bool, bool, bool, bool)
  fullName: RandomGenerator.StringGenerator.BuildCharacterSet(bool, bool, bool, bool)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: BuildCharacterSet
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 18
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected virtual ReadOnlySpan<char> BuildCharacterSet(bool includeLowercase, bool includeUppercase, bool includeNumeric, bool includeSpecial)
    parameters:
    - id: includeLowercase
      type: System.Boolean
    - id: includeUppercase
      type: System.Boolean
    - id: includeNumeric
      type: System.Boolean
    - id: includeSpecial
      type: System.Boolean
    return:
      type: System.ReadOnlySpan{System.Char}
    content.vb: Protected Overridable Function BuildCharacterSet(includeLowercase As Boolean, includeUppercase As Boolean, includeNumeric As Boolean, includeSpecial As Boolean) As ReadOnlySpan(Of Char)
  overload: RandomGenerator.StringGenerator.BuildCharacterSet*
  nameWithType.vb: StringGenerator.BuildCharacterSet(Boolean, Boolean, Boolean, Boolean)
  fullName.vb: RandomGenerator.StringGenerator.BuildCharacterSet(Boolean, Boolean, Boolean, Boolean)
  name.vb: BuildCharacterSet(Boolean, Boolean, Boolean, Boolean)
- uid: RandomGenerator.StringGenerator.Generate(System.ReadOnlySpan{System.Char},System.Int32)
  commentId: M:RandomGenerator.StringGenerator.Generate(System.ReadOnlySpan{System.Char},System.Int32)
  id: Generate(System.ReadOnlySpan{System.Char},System.Int32)
  parent: RandomGenerator.StringGenerator
  langs:
  - csharp
  - vb
  name: Generate(ReadOnlySpan<char>, int)
  nameWithType: StringGenerator.Generate(ReadOnlySpan<char>, int)
  fullName: RandomGenerator.StringGenerator.Generate(System.ReadOnlySpan<char>, int)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/StringGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: Generate
    path: src/RandomGenerator/StringGenerator.cs
    startLine: 39
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected string Generate(ReadOnlySpan<char> text, int length)
    parameters:
    - id: text
      type: System.ReadOnlySpan{System.Char}
    - id: length
      type: System.Int32
    return:
      type: System.String
    content.vb: Protected Function Generate(text As ReadOnlySpan(Of Char), length As Integer) As String
  overload: RandomGenerator.StringGenerator.Generate*
  nameWithType.vb: StringGenerator.Generate(ReadOnlySpan(Of Char), Integer)
  fullName.vb: RandomGenerator.StringGenerator.Generate(System.ReadOnlySpan(Of Char), Integer)
  name.vb: Generate(ReadOnlySpan(Of Char), Integer)
references:
- uid: RandomGenerator
  commentId: N:RandomGenerator
  href: RandomGenerator.html
  name: RandomGenerator
  nameWithType: RandomGenerator
  fullName: RandomGenerator
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: RandomGenerator.StringGenerator.BuildCharacterSet*
  commentId: Overload:RandomGenerator.StringGenerator.BuildCharacterSet
  href: RandomGenerator.StringGenerator.html#RandomGenerator.StringGenerator.BuildCharacterSet(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  name: BuildCharacterSet
  nameWithType: StringGenerator.BuildCharacterSet
  fullName: RandomGenerator.StringGenerator.BuildCharacterSet
- uid: System.ReadOnlySpan{System.Char}
  commentId: T:System.ReadOnlySpan{System.Char}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<char>
  nameWithType: ReadOnlySpan<char>
  fullName: System.ReadOnlySpan<char>
  nameWithType.vb: ReadOnlySpan(Of Char)
  fullName.vb: System.ReadOnlySpan(Of Char)
  name.vb: ReadOnlySpan(Of Char)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RandomGenerator.StringGenerator.Generate*
  commentId: Overload:RandomGenerator.StringGenerator.Generate
  href: RandomGenerator.StringGenerator.html#RandomGenerator.StringGenerator.Generate(System.ReadOnlySpan{System.Char},System.Int32)
  name: Generate
  nameWithType: StringGenerator.Generate
  fullName: RandomGenerator.StringGenerator.Generate
