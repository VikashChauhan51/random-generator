### YamlMime:ManagedReference
items:
- uid: RandomGenerator.RandomTextGenerator
  commentId: T:RandomGenerator.RandomTextGenerator
  id: RandomTextGenerator
  parent: RandomGenerator
  children:
  - RandomGenerator.RandomTextGenerator.#ctor
  - RandomGenerator.RandomTextGenerator.#ctor(RandomGenerator.RandomParagraphGenerator)
  - RandomGenerator.RandomTextGenerator.Generate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - RandomGenerator.RandomTextGenerator.random
  langs:
  - csharp
  - vb
  name: RandomTextGenerator
  nameWithType: RandomTextGenerator
  fullName: RandomGenerator.RandomTextGenerator
  type: Class
  source:
    remote:
      path: src/RandomGenerator/RandomTextGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: RandomTextGenerator
    path: src/RandomGenerator/RandomTextGenerator.cs
    startLine: 4
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public class RandomTextGenerator
    content.vb: Public Class RandomTextGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RandomGenerator.RandomTextGenerator.random
  commentId: F:RandomGenerator.RandomTextGenerator.random
  id: random
  parent: RandomGenerator.RandomTextGenerator
  langs:
  - csharp
  - vb
  name: random
  nameWithType: RandomTextGenerator.random
  fullName: RandomGenerator.RandomTextGenerator.random
  type: Field
  source:
    remote:
      path: src/RandomGenerator/RandomTextGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: random
    path: src/RandomGenerator/RandomTextGenerator.cs
    startLine: 6
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: protected static readonly Random random
    return:
      type: System.Random
    content.vb: Protected Shared ReadOnly random As Random
- uid: RandomGenerator.RandomTextGenerator.#ctor
  commentId: M:RandomGenerator.RandomTextGenerator.#ctor
  id: '#ctor'
  parent: RandomGenerator.RandomTextGenerator
  langs:
  - csharp
  - vb
  name: RandomTextGenerator()
  nameWithType: RandomTextGenerator.RandomTextGenerator()
  fullName: RandomGenerator.RandomTextGenerator.RandomTextGenerator()
  type: Constructor
  source:
    remote:
      path: src/RandomGenerator/RandomTextGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: .ctor
    path: src/RandomGenerator/RandomTextGenerator.cs
    startLine: 9
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomTextGenerator()
    content.vb: Public Sub New()
  overload: RandomGenerator.RandomTextGenerator.#ctor*
  nameWithType.vb: RandomTextGenerator.New()
  fullName.vb: RandomGenerator.RandomTextGenerator.New()
  name.vb: New()
- uid: RandomGenerator.RandomTextGenerator.#ctor(RandomGenerator.RandomParagraphGenerator)
  commentId: M:RandomGenerator.RandomTextGenerator.#ctor(RandomGenerator.RandomParagraphGenerator)
  id: '#ctor(RandomGenerator.RandomParagraphGenerator)'
  parent: RandomGenerator.RandomTextGenerator
  langs:
  - csharp
  - vb
  name: RandomTextGenerator(RandomParagraphGenerator?)
  nameWithType: RandomTextGenerator.RandomTextGenerator(RandomParagraphGenerator?)
  fullName: RandomGenerator.RandomTextGenerator.RandomTextGenerator(RandomGenerator.RandomParagraphGenerator?)
  type: Constructor
  source:
    remote:
      path: src/RandomGenerator/RandomTextGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: .ctor
    path: src/RandomGenerator/RandomTextGenerator.cs
    startLine: 12
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public RandomTextGenerator(RandomParagraphGenerator? randomParagraphGenerator)
    parameters:
    - id: randomParagraphGenerator
      type: RandomGenerator.RandomParagraphGenerator
    content.vb: Public Sub New(randomParagraphGenerator As RandomParagraphGenerator)
  overload: RandomGenerator.RandomTextGenerator.#ctor*
  nameWithType.vb: RandomTextGenerator.New(RandomParagraphGenerator)
  fullName.vb: RandomGenerator.RandomTextGenerator.New(RandomGenerator.RandomParagraphGenerator)
  name.vb: New(RandomParagraphGenerator)
- uid: RandomGenerator.RandomTextGenerator.Generate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:RandomGenerator.RandomTextGenerator.Generate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Generate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: RandomGenerator.RandomTextGenerator
  langs:
  - csharp
  - vb
  name: Generate(int, int, int, int, int)
  nameWithType: RandomTextGenerator.Generate(int, int, int, int, int)
  fullName: RandomGenerator.RandomTextGenerator.Generate(int, int, int, int, int)
  type: Method
  source:
    remote:
      path: src/RandomGenerator/RandomTextGenerator.cs
      branch: main
      repo: https://github.com/VikashChauhan51/random-generator.git
    id: Generate
    path: src/RandomGenerator/RandomTextGenerator.cs
    startLine: 17
  assemblies:
  - RandomGenerator
  namespace: RandomGenerator
  syntax:
    content: public string Generate(int numberParagraphs, int minSentences, int maxSentences, int minWords, int maxWords)
    parameters:
    - id: numberParagraphs
      type: System.Int32
    - id: minSentences
      type: System.Int32
    - id: maxSentences
      type: System.Int32
    - id: minWords
      type: System.Int32
    - id: maxWords
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function Generate(numberParagraphs As Integer, minSentences As Integer, maxSentences As Integer, minWords As Integer, maxWords As Integer) As String
  overload: RandomGenerator.RandomTextGenerator.Generate*
  nameWithType.vb: RandomTextGenerator.Generate(Integer, Integer, Integer, Integer, Integer)
  fullName.vb: RandomGenerator.RandomTextGenerator.Generate(Integer, Integer, Integer, Integer, Integer)
  name.vb: Generate(Integer, Integer, Integer, Integer, Integer)
references:
- uid: RandomGenerator
  commentId: N:RandomGenerator
  href: RandomGenerator.html
  name: RandomGenerator
  nameWithType: RandomGenerator
  fullName: RandomGenerator
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: RandomGenerator.RandomTextGenerator.#ctor*
  commentId: Overload:RandomGenerator.RandomTextGenerator.#ctor
  href: RandomGenerator.RandomTextGenerator.html#RandomGenerator.RandomTextGenerator.#ctor
  name: RandomTextGenerator
  nameWithType: RandomTextGenerator.RandomTextGenerator
  fullName: RandomGenerator.RandomTextGenerator.RandomTextGenerator
  nameWithType.vb: RandomTextGenerator.New
  fullName.vb: RandomGenerator.RandomTextGenerator.New
  name.vb: New
- uid: RandomGenerator.RandomParagraphGenerator
  commentId: T:RandomGenerator.RandomParagraphGenerator
  parent: RandomGenerator
  href: RandomGenerator.RandomParagraphGenerator.html
  name: RandomParagraphGenerator
  nameWithType: RandomParagraphGenerator
  fullName: RandomGenerator.RandomParagraphGenerator
- uid: RandomGenerator.RandomTextGenerator.Generate*
  commentId: Overload:RandomGenerator.RandomTextGenerator.Generate
  href: RandomGenerator.RandomTextGenerator.html#RandomGenerator.RandomTextGenerator.Generate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  name: Generate
  nameWithType: RandomTextGenerator.Generate
  fullName: RandomGenerator.RandomTextGenerator.Generate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
